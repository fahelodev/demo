trigger:
- main
resources:
- repo: self

variables:
  imageRepository: 'microservices'
  containerRegistry: 'fahelocr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'
  acrsecret: tsoftacr

stages:
- stage: Build_Docker
  displayName: Build Docker and Push in Container Registry
  jobs:
  - job: Build
    displayName: Build Docker
    pool:
        vmImage: '$(vmImageName)'
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'containerRegistryServiceConnection'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePath)'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      displayName: Publish manifest k8s files to pipeline
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/k8s'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy to Azure Container Registry
  dependsOn: Build_Docker
  jobs:
    - job: Deploy
      displayName: Deploy to AKS
      pool:
        vmImage: '$(vmImageName)'
      steps:
      - task: DownloadPipelineArtifact@2
        displayName: Download manifests files
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          targetPath: '$(Pipeline.Workspace)/manifests'
      - task: KubernetesManifest@0
        displayName: create a secret
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'k8sServiceConnection'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: '$(acrsecret)'
          dockerRegistryEndpoint: 'containerRegistryServiceConnection'
      - task: KubernetesManifest@0
        displayName: Deploy to k8s fahelo AKS
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'k8sServiceConnection'
          namespace: 'default'
          manifests: |
            $(Pipeline.Workspace)/manifests/deployment.yml
            $(Pipeline.Workspace)/manifests/service.yml
          containers: '$(containerRegistry)/$(imageRepository):$(tag)'
          imagePullSecrets: '$(acrsecret)'
          
      